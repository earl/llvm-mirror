# NOTE: Assertions have been autogenerated by utils/update_mca_test_checks.py
# RUN: llvm-mca -mtriple=x86_64-unknown-unknown -mcpu=btver2 -instruction-tables < %s | FileCheck %s

cmpxchg8b  (%rax)
cmpxchg16b (%rax)
lock cmpxchg8b  (%rax)
lock cmpxchg16b (%rax)

cmpxchgb  %bl, %cl
cmpxchgw  %bx, %cx
cmpxchgl  %ebx, %ecx
cmpxchgq  %rbx, %rcx

cmpxchgb  %bl, (%rsi)
cmpxchgw  %bx, (%rsi)
cmpxchgl  %ebx, (%rsi)
cmpxchgq  %rbx, (%rsi)

lock cmpxchgb  %bl, (%rsi)
lock cmpxchgw  %bx, (%rsi)
lock cmpxchgl  %ebx, (%rsi)
lock cmpxchgq  %rbx, (%rsi)

# CHECK:      Instruction Info:
# CHECK-NEXT: [1]: #uOps
# CHECK-NEXT: [2]: Latency
# CHECK-NEXT: [3]: RThroughput
# CHECK-NEXT: [4]: MayLoad
# CHECK-NEXT: [5]: MayStore
# CHECK-NEXT: [6]: HasSideEffects (U)

# CHECK:      [1]    [2]    [3]    [4]    [5]    [6]    Instructions:
# CHECK-NEXT:  2      4     1.00    *      *            cmpxchg8b	(%rax)
# CHECK-NEXT:  2      4     1.00    *      *            cmpxchg16b	(%rax)
# CHECK-NEXT:  2      4     1.00    *      *            lock		cmpxchg8b	(%rax)
# CHECK-NEXT:  2      4     1.00    *      *            lock		cmpxchg16b	(%rax)
# CHECK-NEXT:  1      1     0.50                        cmpxchgb	%bl, %cl
# CHECK-NEXT:  1      1     0.50                        cmpxchgw	%bx, %cx
# CHECK-NEXT:  1      1     0.50                        cmpxchgl	%ebx, %ecx
# CHECK-NEXT:  1      1     0.50                        cmpxchgq	%rbx, %rcx
# CHECK-NEXT:  2      4     1.00    *      *            cmpxchgb	%bl, (%rsi)
# CHECK-NEXT:  2      4     1.00    *      *            cmpxchgw	%bx, (%rsi)
# CHECK-NEXT:  2      4     1.00    *      *            cmpxchgl	%ebx, (%rsi)
# CHECK-NEXT:  2      4     1.00    *      *            cmpxchgq	%rbx, (%rsi)
# CHECK-NEXT:  2      4     1.00    *      *            lock		cmpxchgb	%bl, (%rsi)
# CHECK-NEXT:  2      4     1.00    *      *            lock		cmpxchgw	%bx, (%rsi)
# CHECK-NEXT:  2      4     1.00    *      *            lock		cmpxchgl	%ebx, (%rsi)
# CHECK-NEXT:  2      4     1.00    *      *            lock		cmpxchgq	%rbx, (%rsi)

# CHECK:      Resources:
# CHECK-NEXT: [0]   - JALU0
# CHECK-NEXT: [1]   - JALU1
# CHECK-NEXT: [2]   - JDiv
# CHECK-NEXT: [3]   - JFPA
# CHECK-NEXT: [4]   - JFPM
# CHECK-NEXT: [5]   - JFPU0
# CHECK-NEXT: [6]   - JFPU1
# CHECK-NEXT: [7]   - JLAGU
# CHECK-NEXT: [8]   - JMul
# CHECK-NEXT: [9]   - JSAGU
# CHECK-NEXT: [10]  - JSTC
# CHECK-NEXT: [11]  - JVALU0
# CHECK-NEXT: [12]  - JVALU1
# CHECK-NEXT: [13]  - JVIMUL

# CHECK:      Resource pressure per iteration:
# CHECK-NEXT: [0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   [12]   [13]
# CHECK-NEXT: 8.00   8.00    -      -      -      -      -     12.00   -     12.00   -      -      -      -

# CHECK:      Resource pressure by instruction:
# CHECK-NEXT: [0]    [1]    [2]    [3]    [4]    [5]    [6]    [7]    [8]    [9]    [10]   [11]   [12]   [13]   Instructions:
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     cmpxchg8b	(%rax)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     cmpxchg16b	(%rax)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     lock		cmpxchg8b	(%rax)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     lock		cmpxchg16b	(%rax)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -      -     cmpxchgb	%bl, %cl
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -      -     cmpxchgw	%bx, %cx
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -      -     cmpxchgl	%ebx, %ecx
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -      -      -      -      -      -      -      -     cmpxchgq	%rbx, %rcx
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     cmpxchgb	%bl, (%rsi)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     cmpxchgw	%bx, (%rsi)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     cmpxchgl	%ebx, (%rsi)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     cmpxchgq	%rbx, (%rsi)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     lock		cmpxchgb	%bl, (%rsi)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     lock		cmpxchgw	%bx, (%rsi)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     lock		cmpxchgl	%ebx, (%rsi)
# CHECK-NEXT: 0.50   0.50    -      -      -      -      -     1.00    -     1.00    -      -      -      -     lock		cmpxchgq	%rbx, (%rsi)
