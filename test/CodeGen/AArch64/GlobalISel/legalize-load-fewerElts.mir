# RUN: llc -march=aarch64 -o - -run-pass=legalizer -global-isel-abort=0 -debug-only=legalizer 2>&1 %s | FileCheck %s
# REQUIRES: asserts

# CHECK: Legalize Machine IR for: load_v4s32
# CHECK-NEXT: %{{[0-9]+}}:_(<4 x s32>) = G_LOAD %{{[0-9]+}}:_(p0)
# CHECK-NEXT: Reduce number of elements
---
name:            load_v4s32
legalized:       false
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x0

    %0:_(p0) = COPY $x0
    %1:_(<4 x s32>) = G_LOAD %0(p0) :: (load 16, align 4)
    %2:_(s32), %3:_(s32), %4:_(s32), %5:_(s32) = G_UNMERGE_VALUES %1(<4 x s32>)
    $w0 = COPY %5(s32)

...

# Make sure we are able to scalarize v2s64.
# CHECK: Legalize Machine IR for: load_v2s64
# CHECK-NEXT: %{{[0-9]+}}:_(<2 x s64>) = G_LOAD %{{[0-9]+}}:_(p0)
# CHECK-NEXT: Reduce number of elements
---
name:            load_v2s64
legalized:       false
tracksRegLiveness: true
body:             |
  bb.1:
    liveins: $x0

    %0:_(p0) = COPY $x0
    %1:_(<2 x s64>) = G_LOAD %0(p0) :: (load 16)
    %2:_(s64), %3:_(s64) = G_UNMERGE_VALUES %1(<2 x s64>)
    $x0 = COPY %3(s64)

...
